name: 'Build, Test and Publish'
run-name: 'Build, Test and Publish'

on:
  release:
    types: [published]

jobs:
  docker-meta:
    name: 'Collect and Export Docker metadata'
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker-meta.outputs.tags }}
      labels: ${{ steps.docker-meta.outputs.labels }}
      version: ${{ steps.docker-meta.outputs.version }}
    steps:
      - name: 'Collect metadata'
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ vars.DOCKERHUB_NAMESPACE }}/yet-another-pihole-dot-doh
            ghcr.io/${{ github.repository_owner }}/yet-another-pihole-dot-doh
          flavor: latest=auto
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag

  test-release:
    name: 'Build and Test New Release'
    runs-on: ubuntu-latest
    needs: docker-meta
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Build Test Image and Run Tests'
        run: ./build-and-test.sh --pihole_target_tag ${{ needs.docker-meta.outputs.version }}

  build-and-publish:
    name: 'Build New Release'
    needs:
      - test-release
      - docker-meta
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v3
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3
      - name: 'Login to DockerHub'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_NAMESPACE }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build Images and Push'
        uses: docker/build-push-action@v6
        with:
          context: ./src/
          platforms: linux/amd64, linux/arm64, linux/386, linux/arm/v7, linux/arm/v6
          build-args: PIHOLE_DOCKER_TAG=${{ needs.docker-meta.outputs.version }}
          push: true
          provenance: false
          tags: ${{ needs.docker-meta.outputs.tags }}
          labels: ${{ needs.docker-meta.outputs.labels }}
